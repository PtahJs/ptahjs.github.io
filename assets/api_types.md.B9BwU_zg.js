import{_ as e,c as t,o,a8 as n}from"./chunks/framework.D4kDUKjx.js";const m=JSON.parse('{"title":"Built-in Types","description":"","frontmatter":{},"headers":[],"relativePath":"api/types.md","filePath":"api/types.md"}'),s={name:"api/types.md"},r=n('<h1 id="built-in-types" tabindex="-1">Built-in Types <a class="header-anchor" href="#built-in-types" aria-label="Permalink to &quot;Built-in Types&quot;">​</a></h1><h2 id="moduletype" tabindex="-1">ModuleType <a class="header-anchor" href="#moduletype" aria-label="Permalink to &quot;ModuleType&quot;">​</a></h2><p>Built-in module types representing different node types:</p><ul><li><strong><code>ModuleType.RootApp</code></strong>: Represents the root node.</li><li><strong><code>ModuleType.ScenePage</code></strong>: Represents a scene page node.</li><li><strong><code>ModuleType.ModalPage</code></strong>: Represents a modal page node.</li><li><strong><code>ModuleType.DrawerPageType</code></strong>: Represents a drawer page node.</li><li><strong><code>ModuleType.ComponentType</code></strong>: Represents a component type node.</li><li><strong><code>ModuleType.ComponentGroup</code></strong>: Represents a component group type node.</li><li><strong><code>ModuleType.Block</code></strong>: Represents a placeholder block type node.</li><li><strong><code>ModuleType.Event</code></strong>: Represents an event type node.</li></ul><h2 id="resourcetype" tabindex="-1">ResourceType <a class="header-anchor" href="#resourcetype" aria-label="Permalink to &quot;ResourceType&quot;">​</a></h2><p>Resource types used to identify different resources within a class:</p><ul><li><strong><code>ResourceType.SceneProps</code></strong>: Scene parameters type.</li><li><strong><code>ResourceType.Modules</code></strong>: Modules type.</li><li><strong><code>ResourceType.ModuleProps</code></strong>: Module parameters type.</li></ul><h2 id="dnditemtype" tabindex="-1">DndItemType <a class="header-anchor" href="#dnditemtype" aria-label="Permalink to &quot;DndItemType&quot;">​</a></h2><p>Built-in drag-and-drop item types used to identify different drag-and-drop items:</p><ul><li><strong><code>DndItemType.SCENE_ITEM</code></strong>: Indicates that the item being dragged is a scene item.</li><li><strong><code>DndItemType.MODULE_ITEM</code></strong>: Indicates that the item being dragged is a module item.</li></ul>',10),d=[r];function a(i,p,l,c,u,y){return o(),t("div",null,d)}const h=e(s,[["render",a]]);export{m as __pageData,h as default};
