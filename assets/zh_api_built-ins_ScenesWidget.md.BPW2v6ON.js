import{_ as i,c as t,o as a,af as e}from"./chunks/framework.D6bkN3-B.js";const r=JSON.parse('{"title":"<ScenesWidget>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/ScenesWidget.md","filePath":"zh/api/built-ins/ScenesWidget.md"}'),l={name:"zh/api/built-ins/ScenesWidget.md"};function n(h,s,p,d,k,E){return a(),t("div",null,s[0]||(s[0]=[e(`<h1 id="sceneswidget" tabindex="-1"><code>&lt;ScenesWidget&gt;</code> <a class="header-anchor" href="#sceneswidget" aria-label="Permalink to &quot;\`&lt;ScenesWidget&gt;\`&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>&lt;ScenesWidget&gt;</code> 组件必须在 <code>&lt;Provider&gt;</code> 组件内使用。</p></div><p><code>&lt;ScenesWidget&gt;</code> 组件用于展示场景列表，可以自定义展示每个场景的内容。通过此组件，用户可以方便地查看和管理多个场景。</p><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="精简版" tabindex="-1">精简版 <a class="header-anchor" href="#精简版" aria-label="Permalink to &quot;精简版&quot;">​</a></h4><p>在精简版中，直接使用 <code>&lt;ScenesWidget&gt;</code> 组件，默认展示场景列表，无需额外定制：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ScenesWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ScenesWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="定制版" tabindex="-1">定制版 <a class="header-anchor" href="#定制版" aria-label="Permalink to &quot;定制版&quot;">​</a></h4><p>您可以通过插槽自定义每个场景项的展示内容。例如，您可以定制场景内容和空数据时的提示：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ScenesWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.props.title || item.title }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;没有数据&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ScenesWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插槽说明" tabindex="-1">插槽说明 <a class="header-anchor" href="#插槽说明" aria-label="Permalink to &quot;插槽说明&quot;">​</a></h3><ul><li><strong><code>#content</code></strong>：自定义场景项的显示内容。<code>item</code> 参数包含每个场景的数据，通常可以访问 <code>title</code> 或其他场景相关的属性。示例中使用 <code>item.props.title</code> 或 <code>item.title</code> 来显示场景标题。</li><li><strong><code>#empty</code></strong>：当没有场景数据时显示的内容提示。</li></ul><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li><strong><code>&lt;Provider&gt;</code> 组件</strong>：<code>&lt;ScenesWidget&gt;</code> 必须被包含在 <code>&lt;Provider&gt;</code> 组件内，以确保正确的上下文和功能支持。</li><li><strong>插槽自定义</strong>：通过 <code>#content</code> 插槽，您可以灵活定制场景列表的展示方式，包括展示特定字段或使用自定义组件。</li><li><strong>空数据提示</strong>：通过 <code>#empty</code> 插槽，您可以自定义空数据时的提示信息，提供更友好的用户体验。</li></ul>`,14)]))}const c=i(l,[["render",n]]);export{r as __pageData,c as default};
