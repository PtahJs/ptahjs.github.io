import{_ as a,c as i,o as t,af as e}from"./chunks/framework.D6bkN3-B.js";const c=JSON.parse('{"title":"<Provider>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/Provider.md","filePath":"zh/api/built-ins/Provider.md"}'),n={name:"zh/api/built-ins/Provider.md"};function l(h,s,p,r,d,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="provider" tabindex="-1"><code>&lt;Provider&gt;</code> <a class="header-anchor" href="#provider" aria-label="Permalink to &quot;\`&lt;Provider&gt;\`&quot;">​</a></h1><p><code>&lt;Provider&gt;</code> 组件用于为您的应用程序提供 Ptah 引擎的功能，确保 Ptah 相关功能的正常运行。它必须通过 <code>app</code> 属性注入一个 Ptah 实例，通常在应用程序的根组件（如 <code>App.vue</code>）中使用，以便为子组件提供全局访问 Ptah 功能的上下文。</p><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><strong>app</strong> (<code>Object</code>): <ul><li>一个已初始化的 Ptah 实例。此实例提供了应用程序所需的 Ptah 引擎功能，如动态模块渲染、内容管理等。</li><li><strong>示例</strong>: <code>const app = usePtah();</code></li></ul></li></ul><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h4><p>在 <code>App.vue</code> 或其他根组件中，您可以通过 <code>app</code> 属性将 Ptah 实例传递给 <code>&lt;Provider&gt;</code> 组件：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Provider</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 你的 Ptah 应用程序 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Provider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            app: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">usePtah</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建并初始化 Ptah 实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在这个示例中，<code>usePtah()</code> 是用于创建 Ptah 实例的函数，并将其传递给 <code>&lt;Provider&gt;</code> 组件。子组件可以在此上下文中访问 Ptah 提供的功能。</p><h3 id="配置和自定义" tabindex="-1">配置和自定义 <a class="header-anchor" href="#配置和自定义" aria-label="Permalink to &quot;配置和自定义&quot;">​</a></h3><p><code>&lt;Provider&gt;</code> 组件本身不需要其他的自定义配置，唯一需要确保的是正确传递 Ptah 实例作为 <code>app</code> 属性。这样，子组件就可以通过上下文访问 Ptah 提供的功能。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li><strong><code>app</code> 属性</strong>：确保传递的 <code>app</code> 是一个有效且初始化过的 Ptah 实例。如果 <code>app</code> 没有被正确传递或初始化，子组件将无法访问 Ptah 功能。</li><li><strong>全局访问</strong>：通过将 Ptah 实例传递给 <code>&lt;Provider&gt;</code>，它会为子组件提供全局上下文，使得子组件能够方便地使用 Ptah 的功能。</li></ul><h3 id="配合其他组件使用" tabindex="-1">配合其他组件使用 <a class="header-anchor" href="#配合其他组件使用" aria-label="Permalink to &quot;配合其他组件使用&quot;">​</a></h3><p><code>&lt;Provider&gt;</code> 是应用程序中的根组件之一，通常与其他 Ptah 组件（如 <code>&lt;Preview&gt;</code>、<code>&lt;ModulesRenderer&gt;</code>、<code>&lt;ModuleConfigureWidget&gt;</code> 等）结合使用，为整个应用程序提供 Ptah 的功能和支持。</p>`,15)]))}const E=a(n,[["render",l]]);export{c as __pageData,E as default};
