import{_ as i,c as a,o as t,af as l}from"./chunks/framework.D6bkN3-B.js";const o=JSON.parse('{"title":"<BlocksWidget>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/BlocksWidget.md","filePath":"zh/api/built-ins/BlocksWidget.md"}'),e={name:"zh/api/built-ins/BlocksWidget.md"};function n(h,s,k,p,E,d){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="blockswidget" tabindex="-1"><code>&lt;BlocksWidget&gt;</code> <a class="header-anchor" href="#blockswidget" aria-label="Permalink to &quot;\`&lt;BlocksWidget&gt;\`&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>&lt;BlocksWidget&gt;</code> 组件必须在 <code>&lt;Provider&gt;</code> 组件内使用。</p></div><p><code>&lt;BlocksWidget&gt;</code> 组件用于展示模块列表，支持精简版和定制化版本，允许你根据需要自定义不同部分的内容，提升界面的灵活性和可扩展性。</p><h3 id="组件结构" tabindex="-1">组件结构 <a class="header-anchor" href="#组件结构" aria-label="Permalink to &quot;组件结构&quot;">​</a></h3><p><code>&lt;BlocksWidget&gt;</code> 组件包含以下主要部分：</p><ol><li><strong>Header（可选）</strong>：可以自定义每个模块的标题显示。</li><li><strong>Section Header（可选）</strong>：可选部分用于模块区块的分隔标题。</li><li><strong>Content（可选）</strong>：模块的详细内容展示。</li></ol><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="精简版" tabindex="-1">精简版 <a class="header-anchor" href="#精简版" aria-label="Permalink to &quot;精简版&quot;">​</a></h4><p>在最简单的用法中，<code>&lt;BlocksWidget&gt;</code> 组件会自动展示模块列表，适用于不需要自定义内容的场景：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">BlocksWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="定制版" tabindex="-1">定制版 <a class="header-anchor" href="#定制版" aria-label="Permalink to &quot;定制版&quot;">​</a></h4><p>在定制版中，您可以通过插槽 (<code>slot</code>) 对模块的各个部分进行自定义。以下是通过插槽自定义的示例：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">BlocksWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Header 部分，显示模块标题 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            {{ item.title }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Section Header 部分 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sectionHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.sectionTitle }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Content 部分，展示模块的详细内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.description }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">BlocksWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插槽说明" tabindex="-1">插槽说明 <a class="header-anchor" href="#插槽说明" aria-label="Permalink to &quot;插槽说明&quot;">​</a></h3><ul><li><code>header</code> 插槽：可以自定义每个模块的标题，<code>item</code> 是每个模块的数据对象，包含模块的相关信息，如 <code>title</code>。</li><li><code>sectionHeader</code> 插槽：自定义区块的标题，通常用于分隔不同模块部分。</li><li><code>content</code> 插槽：自定义模块的详细内容展示部分，<code>item</code> 也包含每个模块的详细信息。</li></ul><h3 id="配置和自定义" tabindex="-1">配置和自定义 <a class="header-anchor" href="#配置和自定义" aria-label="Permalink to &quot;配置和自定义&quot;">​</a></h3><p>您可以根据需求进一步定制 <code>&lt;BlocksWidget&gt;</code> 的外观和行为，例如通过传递额外的 props、事件或者样式类，来改变组件的样式和交互逻辑。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>请确保 <code>&lt;BlocksWidget&gt;</code> 组件始终在 <code>&lt;Provider&gt;</code> 组件的上下文中使用，因为该组件依赖于 Provider 提供的全局状态或功能。</li><li>使用插槽时，可以选择只实现需要定制的部分，未定义的部分将使用组件的默认展示方式。</li></ul>`,19)]))}const g=i(e,[["render",n]]);export{o as __pageData,g as default};
