import{_ as i,c as a,o as t,af as n}from"./chunks/framework.D6bkN3-B.js";const E=JSON.parse('{"title":"<DndItem>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/DndItem.md","filePath":"zh/api/built-ins/DndItem.md"}'),e={name:"zh/api/built-ins/DndItem.md"};function l(h,s,p,d,k,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="dnditem" tabindex="-1"><code>&lt;DndItem&gt;</code> <a class="header-anchor" href="#dnditem" aria-label="Permalink to &quot;\`&lt;DndItem&gt;\`&quot;">​</a></h1><p><code>&lt;DndItem&gt;</code> 组件是一个可以支持拖拽和放置的组件，适用于实现拖拽交互功能。它允许用户通过自定义的拖拽数据和方向控制，实现丰富的拖拽体验。</p><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li><strong>id</strong> (<code>String</code>): <ul><li>拖拽项目的唯一标识符，用于标识每个拖拽项。</li><li><strong>示例</strong>: <code>&quot;id1&quot;</code></li></ul></li><li><strong>item</strong> (<code>Object</code>): <ul><li>拖拽项目的数据对象，包含拖拽项的具体信息。</li><li><strong>示例</strong>: <code>{ name: &#39;Item 1&#39;, value: 100 }</code></li></ul></li><li><strong>type</strong> (<code>String</code>): <ul><li>拖拽类型，用于区分不同的拖拽操作，通常用于处理多种拖拽交互的场景。</li><li><strong>示例</strong>: <code>&quot;move&quot;</code>, <code>&quot;copy&quot;</code></li></ul></li><li><strong>allowedDirections</strong> (<code>Array</code>): <ul><li>允许拖拽的方向轴，指定拖拽只能在指定方向上进行。有效值有 <code>&#39;TOP&#39;</code>, <code>&#39;BOTTOM&#39;</code>, <code>&#39;LEFT&#39;</code>, <code>&#39;RIGHT&#39;</code>，用于限制拖拽的方向。</li><li><strong>示例</strong>: <code>[&#39;TOP&#39;, &#39;BOTTOM&#39;]</code> 或 <code>[&#39;LEFT&#39;, &#39;RIGHT&#39;]</code></li></ul></li></ul><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h4><p>在最简单的用法中，<code>&lt;DndItem&gt;</code> 组件用于展示一个可拖拽的元素。你只需要传递必要的属性，便可实现拖拽功能。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DndItem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;move&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item1&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        :item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ name: &#39;Item 1&#39;, value: 100 }&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        :allowedDirections</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[&#39;TOP&#39;, &#39;BOTTOM&#39;]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DndItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="详细示例" tabindex="-1">详细示例 <a class="header-anchor" href="#详细示例" aria-label="Permalink to &quot;详细示例&quot;">​</a></h4><p>在这个示例中，组件实现了一个可拖拽并限制了方向的项目。拖拽的方向只允许是上下（&#39;TOP&#39; 和 &#39;BOTTOM&#39;），可以根据需要自定义其他行为或样式。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DndItem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;move&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uniqueId&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        :item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{ name: &#39;Item 2&#39;, value: 200 }&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        :allowedDirections</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[&#39;TOP&#39;, &#39;BOTTOM&#39;]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义内容或样式 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.name }} - {{ item.value }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DndItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li><strong>方向限制</strong>：<code>allowedDirections</code> 属性非常有用，能够帮助你控制拖拽操作只能在指定的方向进行。例如，<code>[&#39;LEFT&#39;, &#39;RIGHT&#39;]</code> 只能在水平轴上进行拖拽，防止用户拖动到不希望的区域。</li><li><strong><code>type</code> 属性</strong>：根据 <code>type</code> 可以对拖拽操作进行类型区分，例如实现不同的拖拽行为（如复制或移动）。</li><li><strong><code>item</code> 参数</strong>：你可以通过 <code>item</code> 属性传递任何数据，使得拖拽项可以携带更复杂的状态或信息，便于在拖拽过程中进行处理。</li></ul><h3 id="配合其他组件使用" tabindex="-1">配合其他组件使用 <a class="header-anchor" href="#配合其他组件使用" aria-label="Permalink to &quot;配合其他组件使用&quot;">​</a></h3><p>如果需要配合放置区域或拖拽容器，可以与如 <code>&lt;DndContainer&gt;</code> 等组件结合使用，方便实现复杂的拖拽交互。</p>`,15)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
