import{_ as i,c as a,o as t,af as e}from"./chunks/framework.D6bkN3-B.js";const o=JSON.parse('{"title":"<EventsWidget>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/EventsWidget.md","filePath":"zh/api/built-ins/EventsWidget.md"}'),l={name:"zh/api/built-ins/EventsWidget.md"};function n(h,s,p,d,k,E){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="eventswidget" tabindex="-1"><code>&lt;EventsWidget&gt;</code> <a class="header-anchor" href="#eventswidget" aria-label="Permalink to &quot;\`&lt;EventsWidget&gt;\`&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>&lt;EventsWidget&gt;</code> 组件必须在 <code>&lt;Provider&gt;</code> 组件内使用。</p></div><p><code>&lt;EventsWidget&gt;</code> 组件用于展示事件列表，支持精简版和定制版的使用方式，提供灵活的内容自定义选项，适用于需要显示和操作事件列表的场景。</p><h3 id="组件结构" tabindex="-1">组件结构 <a class="header-anchor" href="#组件结构" aria-label="Permalink to &quot;组件结构&quot;">​</a></h3><p><code>&lt;EventsWidget&gt;</code> 组件主要展示事件信息，同时支持通过插槽自定义事件项的内容。</p><ol><li><strong>content</strong>（可选）： <ul><li>允许你自定义每个事件项的展示内容。</li></ul></li></ol><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="精简版" tabindex="-1">精简版 <a class="header-anchor" href="#精简版" aria-label="Permalink to &quot;精简版&quot;">​</a></h4><p>在精简版中，<code>&lt;EventsWidget&gt;</code> 组件会自动展示事件列表，适用于不需要定制内容的场景：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">EventsWidget</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="定制版" tabindex="-1">定制版 <a class="header-anchor" href="#定制版" aria-label="Permalink to &quot;定制版&quot;">​</a></h4><p>在定制版中，您可以通过插槽 (<code>slot</code>) 自定义事件项的内容，例如显示一个配置按钮或其他交互元素。以下是一个通过插槽自定义事件项的示例：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">EventsWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义事件项内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;配置&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">EventsWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插槽说明" tabindex="-1">插槽说明 <a class="header-anchor" href="#插槽说明" aria-label="Permalink to &quot;插槽说明&quot;">​</a></h3><ul><li><code>content</code> 插槽：可以自定义每个事件项的展示内容，<code>item</code> 是每个事件的数据对象，可以包含事件的相关信息，如 <code>title</code>、<code>timestamp</code> 等。</li></ul><h3 id="配置和自定义" tabindex="-1">配置和自定义 <a class="header-anchor" href="#配置和自定义" aria-label="Permalink to &quot;配置和自定义&quot;">​</a></h3><p><code>&lt;EventsWidget&gt;</code> 提供了足够的灵活性，你可以根据需要进一步定制事件列表的外观和行为。通过插槽，你可以添加各种交互元素，例如按钮、链接等，让用户可以与事件进行交互。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>请确保 <code>&lt;EventsWidget&gt;</code> 组件始终在 <code>&lt;Provider&gt;</code> 组件的上下文中使用，因为它依赖于 Provider 提供的全局状态或功能。</li><li>使用插槽时，可以选择只实现需要定制的部分，未定义的部分将使用组件的默认展示方式。</li></ul><h3 id="配合其他组件使用" tabindex="-1">配合其他组件使用 <a class="header-anchor" href="#配合其他组件使用" aria-label="Permalink to &quot;配合其他组件使用&quot;">​</a></h3><p>如果需要更复杂的交互和操作，可以将 <code>&lt;EventsWidget&gt;</code> 与其他组件结合使用，例如 <code>&lt;DndItem&gt;</code> 用于拖拽事件，或与状态管理库结合使用以动态更新事件数据。</p>`,21)]))}const g=i(l,[["render",n]]);export{o as __pageData,g as default};
