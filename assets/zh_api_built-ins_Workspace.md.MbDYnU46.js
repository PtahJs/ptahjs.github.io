import{_ as i,c as a,o as t,af as l}from"./chunks/framework.D6bkN3-B.js";const o=JSON.parse('{"title":"<Workspace>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/Workspace.md","filePath":"zh/api/built-ins/Workspace.md"}'),n={name:"zh/api/built-ins/Workspace.md"};function e(h,s,p,k,E,r){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="workspace" tabindex="-1"><code>&lt;Workspace&gt;</code> <a class="header-anchor" href="#workspace" aria-label="Permalink to &quot;\`&lt;Workspace&gt;\`&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>&lt;Workspace&gt;</code> 组件必须在 <code>&lt;Provider&gt;</code> 组件内使用。</p></div><p><code>&lt;Workspace&gt;</code> 组件作为工作区，用于承载其他组件的渲染与编辑。它提供了丰富的插槽，使得开发者可以自定义页面加载状态、工具栏操作、菜单弹出等内容，提升用户体验。</p><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h4><p>在精简版中，<code>&lt;Workspace&gt;</code> 组件直接使用，支持自定义加载提示、工具栏操作等内容：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Workspace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 加载中的自定义内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;页面请求中...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 工具栏自定义操作 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toolbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;removeItem(item.id)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;删除&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义菜单弹出 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flowMenuPopper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;菜单-1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Workspace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插槽说明" tabindex="-1">插槽说明 <a class="header-anchor" href="#插槽说明" aria-label="Permalink to &quot;插槽说明&quot;">​</a></h3><ul><li><strong><code>#loading</code></strong>：自定义页面加载中的显示内容，通常用于显示加载动画或提示信息，直到页面数据加载完成。</li><li><strong><code>#toolbar</code></strong>：自定义工作区的工具栏内容，可以用于实现常见的操作按钮。<code>item</code> 参数传递当前工具栏项的相关数据。</li><li><strong><code>#flowMenuPopper</code></strong>：自定义流式菜单的弹出内容。此插槽可以包含任何自定义菜单项或操作。</li></ul><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li><strong><code>&lt;Provider&gt;</code> 组件</strong>：<code>&lt;Workspace&gt;</code> 必须嵌套在 <code>&lt;Provider&gt;</code> 组件内，以确保功能正常运行并访问 Ptah 引擎所需的上下文。</li><li><strong>插槽自定义</strong>：通过插槽，您可以自定义不同的区域内容，包括加载状态、工具栏按钮、菜单等，灵活适配应用的需求。</li><li><strong>事件处理</strong>：在插槽中，您可以通过事件绑定（例如，<code>@click</code>）实现与外部数据或功能的交互，如删除操作等。</li></ul>`,11)]))}const g=i(n,[["render",e]]);export{o as __pageData,g as default};
