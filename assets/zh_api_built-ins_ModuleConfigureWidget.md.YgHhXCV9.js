import{_ as s,c as a,o as t,af as l}from"./chunks/framework.D6bkN3-B.js";const g=JSON.parse('{"title":"<ModuleConfigureWidget>","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/built-ins/ModuleConfigureWidget.md","filePath":"zh/api/built-ins/ModuleConfigureWidget.md"}'),e={name:"zh/api/built-ins/ModuleConfigureWidget.md"};function n(h,i,p,k,d,E){return t(),a("div",null,i[0]||(i[0]=[l(`<h1 id="moduleconfigurewidget" tabindex="-1"><code>&lt;ModuleConfigureWidget&gt;</code> <a class="header-anchor" href="#moduleconfigurewidget" aria-label="Permalink to &quot;\`&lt;ModuleConfigureWidget&gt;\`&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>&lt;ModuleConfigureWidget&gt;</code> 组件必须在 <code>&lt;Provider&gt;</code> 组件内使用。</p></div><p><code>&lt;ModuleConfigureWidget&gt;</code> 组件用于展示和配置模块的参数。它支持精简版和定制版使用方式，提供灵活的插槽系统，允许开发者根据需求自定义模块配置界面的展示内容。</p><h3 id="组件结构" tabindex="-1">组件结构 <a class="header-anchor" href="#组件结构" aria-label="Permalink to &quot;组件结构&quot;">​</a></h3><p><code>&lt;ModuleConfigureWidget&gt;</code> 组件包含以下主要部分：</p><ol><li><strong>header</strong>（可选）：模块的标题部分，通常显示模块的名称或标签。</li><li><strong>groupHeader</strong>（可选）：模块分组的标题，用于将模块分成不同的组。</li><li><strong>before</strong>（可选）：自定义模块参数前的内容展示区域，可以用于显示额外的信息或描述。</li><li><strong>after</strong>（可选）：自定义模块参数后的内容展示区域，用于添加额外的按钮或信息。</li><li><strong>empty</strong>（可选）：当没有模块参数时，显示的空状态文本。</li></ol><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><h4 id="精简版" tabindex="-1">精简版 <a class="header-anchor" href="#精简版" aria-label="Permalink to &quot;精简版&quot;">​</a></h4><p>在精简版中，<code>&lt;ModuleConfigureWidget&gt;</code> 组件会自动展示模块参数，适用于不需要自定义内容的场景：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ModuleConfigureWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="定制版" tabindex="-1">定制版 <a class="header-anchor" href="#定制版" aria-label="Permalink to &quot;定制版&quot;">​</a></h4><p>在定制版中，您可以通过插槽（<code>slot</code>）自定义模块配置项的展示方式。以下是一个通过插槽自定义的示例：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ModuleConfigureWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Header 部分，显示模块的标签 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.label }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Group Header 部分 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">groupHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ item.label }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 Before 部分，显示模块前的信息 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 自定义 After 部分，显示模块后的内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 当没有数据时显示的空状态 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> #</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;没有数据&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ModuleConfigureWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="插槽说明" tabindex="-1">插槽说明 <a class="header-anchor" href="#插槽说明" aria-label="Permalink to &quot;插槽说明&quot;">​</a></h3><ul><li><code>header</code> 插槽：可以自定义每个模块的标题显示，<code>item</code> 是模块的数据对象，通常包含模块的标签或名称。</li><li><code>groupHeader</code> 插槽：自定义模块组的标题，用于将不同的模块分组显示。</li><li><code>before</code> 插槽：自定义模块参数前的内容展示，通常可以用于添加额外的描述信息。</li><li><code>after</code> 插槽：自定义模块参数后的内容展示，可以用于添加按钮、链接或其他交互元素。</li><li><code>empty</code> 插槽：当没有模块数据时显示的空状态信息，例如“没有数据”或“暂无配置”。</li></ul><h3 id="配置和自定义" tabindex="-1">配置和自定义 <a class="header-anchor" href="#配置和自定义" aria-label="Permalink to &quot;配置和自定义&quot;">​</a></h3><p><code>&lt;ModuleConfigureWidget&gt;</code> 提供了极高的灵活性，您可以根据需求通过插槽定制每个模块的展示内容。除了基本的插槽自定义外，还可以结合其他组件进行复杂的交互和动态更新。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>请确保 <code>&lt;ModuleConfigureWidget&gt;</code> 组件始终在 <code>&lt;Provider&gt;</code> 组件的上下文中使用，因为它依赖于 Provider 提供的全局状态或功能。</li><li>使用插槽时，可以选择只实现需要定制的部分，未定义的部分将使用组件的默认展示方式。</li></ul><h3 id="配合其他组件使用" tabindex="-1">配合其他组件使用 <a class="header-anchor" href="#配合其他组件使用" aria-label="Permalink to &quot;配合其他组件使用&quot;">​</a></h3><p><code>&lt;ModuleConfigureWidget&gt;</code> 组件可以与其他配置相关的组件结合使用，如动态表单、拖拽排序等，构建复杂的模块配置界面。</p>`,21)]))}const o=s(e,[["render",n]]);export{g as __pageData,o as default};
