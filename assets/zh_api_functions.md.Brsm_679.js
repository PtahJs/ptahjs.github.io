import{_ as i,c as a,o as n,af as l}from"./chunks/framework.D6bkN3-B.js";const d=JSON.parse('{"title":"工具函数","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/functions.md","filePath":"zh/api/functions.md"}'),e={name:"zh/api/functions.md"};function t(h,s,p,r,k,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="工具函数" tabindex="-1">工具函数 <a class="header-anchor" href="#工具函数" aria-label="Permalink to &quot;工具函数&quot;">​</a></h1><h2 id="createnumberprop" tabindex="-1"><code>createNumberProp()</code> <a class="header-anchor" href="#createnumberprop" aria-label="Permalink to &quot;\`createNumberProp()\`&quot;">​</a></h2><p><code>createNumberProp</code> 用于创建整数或浮点数类型的属性。可以指定属性的初始值、标签、字段名等参数。</p><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>component</strong>: 组件名称，通常为 <code>PropNumber</code>。</li><li><strong>field</strong>: 字段名称，属性的唯一标识符。</li><li><strong>label</strong>: 标签，显示给用户的属性名称。</li><li><strong>defaultValue</strong>: 默认值，属性的初始值。</li><li><strong>tips</strong>: 提示信息，通常用于展示给用户的辅助说明。</li><li><strong>visible</strong>: 布尔值，控制属性是否可见。</li></ul><h4 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createNumberProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    component: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PropNumber&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Width&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tips: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入宽度值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="createobjectprop" tabindex="-1"><code>createObjectProp()</code> <a class="header-anchor" href="#createobjectprop" aria-label="Permalink to &quot;\`createObjectProp()\`&quot;">​</a></h2><p><code>createObjectProp</code> 用于创建对象类型的属性。可以通过该函数定义一个包含多个键值对的对象属性。</p><h4 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>component</strong>: 组件名称，通常为 <code>PropObject</code>。</li><li><strong>field</strong>: 字段名称，属性的唯一标识符。</li><li><strong>label</strong>: 标签，显示给用户的属性名称。</li><li><strong>defaultValue</strong>: 默认值，属性的初始值（通常为 <code>{}</code>）。</li><li><strong>tips</strong>: 提示信息，通常用于展示给用户的辅助说明。</li><li><strong>visible</strong>: 布尔值，控制属性是否可见。</li></ul><h4 id="使用示例-1" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-1" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createObjectProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    component: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PropObject&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Dimensions&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultValue: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tips: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入对象的属性值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="createstringprop" tabindex="-1"><code>createStringProp()</code> <a class="header-anchor" href="#createstringprop" aria-label="Permalink to &quot;\`createStringProp()\`&quot;">​</a></h2><p><code>createStringProp</code> 用于创建字符串类型的属性。此函数通常用于创建文本字段、标题等。</p><h4 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>component</strong>: 组件名称，通常为 <code>PropString</code>。</li><li><strong>field</strong>: 字段名称，属性的唯一标识符。</li><li><strong>label</strong>: 标签，显示给用户的属性名称。</li><li><strong>defaultValue</strong>: 默认值，属性的初始值（通常为空字符串 <code>&#39;&#39;</code>）。</li><li><strong>tips</strong>: 提示信息，通常用于展示给用户的辅助说明。</li><li><strong>visible</strong>: 布尔值，控制属性是否可见。</li></ul><h4 id="使用示例-2" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-2" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createStringProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    component: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PropString&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Height&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultValue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tips: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;请输入高度值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="creategroupprop" tabindex="-1"><code>createGroupProp()</code> <a class="header-anchor" href="#creategroupprop" aria-label="Permalink to &quot;\`createGroupProp()\`&quot;">​</a></h2><p><code>createGroupProp</code> 用于创建一个属性组，将多个基础属性包装在一起。通常用于将相关属性进行分组，便于管理和展示。</p><h4 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>label</strong>: 属性组的标签。</li><li><strong>props</strong>: 一个属性数组，包含多个基础属性。</li></ul><h4 id="使用示例-3" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-3" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createGroupProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Group Title&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    props: [</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        createNumberProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Width&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        createStringProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Height&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            defaultValue: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="createbooleanprop" tabindex="-1"><code>createBooleanProp()</code> <a class="header-anchor" href="#createbooleanprop" aria-label="Permalink to &quot;\`createBooleanProp()\`&quot;">​</a></h2><p><code>createBooleanProp</code> 用于创建布尔类型的属性，常用于开关、复选框等。</p><h4 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>component</strong>: 组件名称，通常为 <code>PropBoolean</code>。</li><li><strong>field</strong>: 字段名称，属性的唯一标识符。</li><li><strong>label</strong>: 标签，显示给用户的属性名称。</li><li><strong>defaultValue</strong>: 默认值，属性的初始值（布尔类型）。</li><li><strong>tips</strong>: 提示信息，通常用于展示给用户的辅助说明。</li><li><strong>visible</strong>: 布尔值，控制属性是否可见。</li></ul><h4 id="使用示例-4" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-4" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createBooleanProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    component: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PropBoolean&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Enable&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultValue: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tips: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;是否启用此功能&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="createarrayprop" tabindex="-1"><code>createArrayProp()</code> <a class="header-anchor" href="#createarrayprop" aria-label="Permalink to &quot;\`createArrayProp()\`&quot;">​</a></h2><p><code>createArrayProp</code> 用于创建数组类型的属性，通常用于选择多个选项或提供多个值的输入。</p><h4 id="参数-5" tabindex="-1">参数 <a class="header-anchor" href="#参数-5" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>component</strong>: 组件名称，通常为 <code>PropArray</code>。</li><li><strong>field</strong>: 字段名称，属性的唯一标识符。</li><li><strong>label</strong>: 标签，显示给用户的属性名称。</li><li><strong>defaultValue</strong>: 默认值，属性的初始值（通常为空数组 <code>[]</code>）。</li><li><strong>options</strong>: 可选项数组，通常用于下拉选择框或多选框等。</li><li><strong>tips</strong>: 提示信息，通常用于展示给用户的辅助说明。</li><li><strong>visible</strong>: 布尔值，控制属性是否可见。</li></ul><h4 id="使用示例-5" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-5" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createArrayProp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    component: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PropArray&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;field5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Options&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultValue: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    options: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Option1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Option2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Option3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tips: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;选择可用的选项&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    visible: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="createslot" tabindex="-1"><code>createSlot()</code> <a class="header-anchor" href="#createslot" aria-label="Permalink to &quot;\`createSlot()\`&quot;">​</a></h2><p><code>createSlot</code> 用于创建插槽方法，可以为组件提供灵活的插槽配置，支持白名单和黑名单的过滤，控制哪些内容可以插入到该插槽。</p><h4 id="参数-6" tabindex="-1">参数 <a class="header-anchor" href="#参数-6" aria-label="Permalink to &quot;参数&quot;">​</a></h4><ul><li><strong>title</strong>: 插槽的标题或标识。</li><li><strong>allow</strong>: 白名单，指定允许的插槽内容。</li><li><strong>deny</strong>: 黑名单，指定禁止的插槽内容。</li><li><strong>props</strong>: 插槽的扩展参数，允许自定义插槽的额外属性。</li></ul><h4 id="使用示例-6" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例-6" aria-label="Permalink to &quot;使用示例&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSlot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CustomSlot&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allow: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ComponentA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ComponentB&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 白名单，允许插入的组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    deny: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ComponentC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 黑名单，禁止插入的组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    props: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插槽扩展参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,43)]))}const c=i(e,[["render",t]]);export{d as __pageData,c as default};
